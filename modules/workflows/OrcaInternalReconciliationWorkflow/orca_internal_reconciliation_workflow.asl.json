{
    "Comment": "Triggers off of s3 events releated to s3 Inventory. Creates reconciliation reports between s3 and Orca catalog.",
    "StartAt": "ReceiveMessage",
    "States": {
      "ReceiveMessage": {
        "Type": "Task",
        "Parameters": {
          "QueueUrl": "${orca_sqs_internal_report_queue_id}"
        },
        "Resource": "arn:aws:states:::aws-sdk:sqs:receiveMessage",
        "Next": "GetCurrentArchiveList"
      },
      "GetCurrentArchiveList": {
        "Parameters": {
          "cma": {
            "event.$": "$",
            "task_config": {
            }
          }
        },
        "Type": "Task",
        "Resource": "${orca_lambda_get_current_archive_list_arn}",
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "ResultPath": "$.exception",
            "Next": "WorkflowFailed"
          }
        ],
        "Next": "PerformOrcaReconcile"
      },
      "PerformOrcaReconcile": {
        "Parameters": {
          "cma": {
            "event.$": "$",
            "task_config": {
            }
          }
        },
        "Type": "Task",
        "Resource": "${orca_lambda_perform_orca_reconcile_arn}",
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException"
            ],
            "IntervalSeconds": 2,
            "MaxAttempts": 6,
            "BackoffRate": 2
          }
        ],
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "ResultPath": "$.exception",
            "Next": "WorkflowFailed"
          }
        ],
        "Next": "WorkflowSucceeded"
      },
      "WorkflowFailed": {
        "Type": "Fail",
        "Cause": "Workflow failed"
      },
      "WorkflowSucceeded": {
        "Type": "Succeed"
      }
    }
  }