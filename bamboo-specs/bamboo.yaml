---
version: 2
plan:
  project-key: ORCA
  key: PN
  name: prototype-new
stages:
- Setup Env:
    manual: false
    final: false
    jobs:
    - Set Pending Github Status
# - Default Stage:
#     manual: false
#     final: false
#     jobs:
#     - Build and Test
#     - Python snyk
- Clean Up and Report:
    manual: false
    final: false
    jobs:
    - Report Status

# - Deploy DR ORCA buckets:
#     manual: true
#     final: false
#     jobs:
#     - Deploy DR ORCA buckets
# #deploy RDS cluster for integration test
# #TODO ORCA-462: move to a different stage or even to a new plan for better maintenance.
# - Deploy Dev RDS Stack:
#     manual: true
#     final: false
#     jobs:
#     - Deploy RDS cluster

# #deploy orca and cumulus for integration test
# - Deploy Dev Cumulus and ORCA Stack:
#     manual: true
#     final: false
#     jobs:
#     - Deploy cumulus and orca

- Release Stage:
    manual: true
    final: false
    jobs:
    - Release ORCA Documentation
    - Release ORCA Code
#delete resources for integration test
- Cleanup Integration Test:
    manual: true
    final: false
    jobs:
    - Cleanup integration test resources
Set Pending Github Status:
  key: SPGS
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-   #used for better script formatting
        set -ex
        ./bin/set_status.sh pending ${bamboo.resultsUrl} "CI Running"
      description: Set Pending Status
  - script:
      interpreter: SHELL
      scripts:
      - |-   #used for better script formatting
        set -ex
        ./bin/set_status.sh pending ${bamboo.resultsUrl} "CI Running"
      description: Set Pending Status but again!

# Build and Test:
#   key: JOB1
#   other:
#     clean-working-dir: true
#   docker:
#     image: maven.earthdata.nasa.gov/cumulus_orca
#     volumes:
#       ${bamboo.working.directory}: ${bamboo.working.directory}
#       ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
#   tasks:
#   - checkout:
#       force-clean-build: 'false'
#       description: checkout code
#   - script:
#       interpreter: SHELL
#       scripts:
#       - |-
#         #!/bin/bash
#         bin/run_tests.sh
#       description: run all tests
#   - script:
#       interpreter: SHELL
#       scripts:
#       - |-
#         #!/bin/bash
#         ## This script creates a file as a method of letting cleanup jobs know if it was reached, this allows github failure notifications to be sent if the job failed. 
#         set -e
#         touch success.flag
#       description: Set Success Flag
#   final-tasks:
#   - script:
#       interpreter: SHELL
#       scripts:
#       - |-
#         #!/bin/bash
#         ## This script looks for the output from the "Set job success flag" script and reports failure to github if it is not present
#         set -e

#         if [[ ! -f success.flag ]]; then 
#           echo "Job failed, sending failure notice to github"
#           ./bin/set_status.sh failure ${bamboo.resultsUrl} "Testing Step Failed"
#         fi
#       description: report failure to github
# Python snyk:
#   key: PS
#   other:
#     clean-working-dir: true
#   docker:
#     image: maven.earthdata.nasa.gov/node:snyk
#     volumes:
#       ${bamboo.working.directory}: ${bamboo.working.directory}
#       ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
#     docker-run-arguments:
#     - --net=host
#   tasks:
#   - script:
#       interpreter: SHELL
#       scripts:
#       - chown -R 500:502 .
#       description: change owner
#   - clean:
#       description: clean up working dir
#   - checkout:
#       force-clean-build: 'false'
#       description: checkout source
#   - script:
#       interpreter: SHELL
#       scripts:
#       - |-
#         npm install snyk-to-html -g
#         cat > scan.sh <<EOF
#         snyk test --json --file=\$1 --package-manager=pip
#         EOF
#         echo $bamboo_hello
#         find . -name requirement*.txt
#         chmod +x scan.sh
#         for pom in $(find . -name requirements.txt);
#         do
#         snyk test --json --file=$pom --package-manager=pip > report.json;
#         filename=$(dirname $pom |  sed s'/\.\///')
#         snyk-to-html -i report.json -o "$filename.html";
#         done 
#         chown -R 500:502 .

#         #cat > scan.sh <<EOF
#         #!/bin/bash
#         #python3.7 -m venv snyk-test
#         #source snyk-test/bin/activate
#         #update-alternatives --install /tmp/snyk-test/bin/python  python /usr/local/bin/python3.7 1
#         #pip install -r pip_requirements.txt
#         #snyk test --json --package-manager=pip --file=data/mask_fill_pip_requirements.txt > pip_report.json
#         #snyk-to-html -i pip_report.json -o pip_results.html
#         #snyk test --json --file=data/mask_fill_conda_requirements.txt > conda_report.json
#         #snyk-to-html -i conda_report.json -o conda_results.html
#         #EOF
#         #chmod +x scan.sh
#         #docker run --rm -v $PWD:/tmp -w /tmp maven.earthdata.nasa.gov/snyk:py ./scan.sh

#       description: snyk scan
#   artifacts:
#   - name: html report
#     pattern: '**/*.html'
#     shared: false
#     required: true
Report Status:
  key: RS
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  final-tasks:
  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash 
        set -e
        ./bin/set_status.sh success ${bamboo.resultsUrl} "Build Success"
      description: Report Success to GitHub
# Deploy DR ORCA buckets:
#   key: DDROB
#   other:
#     clean-working-dir: true
#   docker:
#     image: maven.earthdata.nasa.gov/cumulus_orca
#     volumes:
#       ${bamboo.working.directory}: ${bamboo.working.directory}
#       ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
#   tasks:
#   - checkout:
#       force-clean-build: 'true'
#       description: Checkout Default Repository
#   - script:
#       interpreter: SHELL
#       scripts:
#       - |-
#         #!/bin/bash
#         bash integration_test/deploy-dr-buckets.sh
# #job for deploying cumulus and orca
# Deploy RDS cluster:
#   key: DRC
#   other:
#     clean-working-dir: true
#   docker:
#     image: maven.earthdata.nasa.gov/cumulus_orca
#     volumes:
#       ${bamboo.working.directory}: ${bamboo.working.directory}
#       ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
#   tasks:
#   - checkout:
#       force-clean-build: 'true'
#       description: Checkout Default Repository
#   - script:
#       interpreter: SHELL
#       scripts:
#       - |-
#         #!/bin/bash
#         bash bin/deployment-rds.sh

# #job for deploying cumulus and orca
# Deploy cumulus and orca:
#   key: DCO
#   other:
#     clean-working-dir: true
#     # Some plugin configurations are not supported by YAML Specs
#   docker:
#     image: maven.earthdata.nasa.gov/cumulus_orca
#     volumes:
#       ${bamboo.working.directory}: ${bamboo.working.directory}
#       ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
#   tasks:
#   - checkout:
#       force-clean-build: 'true'
#       description: Checkout Default Repository

#   - script:
#       interpreter: SHELL
#       scripts:
#       - |-
#         #!/bin/bash
#         bash bin/deployment-cumulus-orca.sh

Release ORCA Documentation:
  key: ROD
  description: Releases ORCA Documentation to nasa.github.io/cumulus-orca
  docker:
    image: node:16.13.1
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
  tasks:
  - checkout:
      force-clean-build: 'true'
      path: source
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        cd source
        set -ex
        if [ ! -f "bin/create_release_documentation.sh" ]; then
          echo "ERROR: create_release_documentation.sh script does not exist!"
          exit 1
        fi
        bin/create_release_documentation.sh
      description: Run documentation release script

Release ORCA Code:
  key: RO
  description: Cleans, creates a GitHub Release and uploads artifacts for release
  docker:
    image: maven.earthdata.nasa.gov/cumulus_orca
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
  tasks:
  - script:
      interpreter: SHELL
      scripts:
      - |-
        ## This script removes the "source" subdirectory which all jobs in this stage utilize. This ensures that there's nothing left over from previous runs.
        ## This is required as the checkout job does not interface correctly with docker in all instances.
        rm -rf ./source
        mkdir source
        rm -rf dist
      description: Clean Working Directory
  - checkout:
      force-clean-build: 'true'
      path: source
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        cd source
        set -ex
        bin/build_release_package.sh
      description: Create Release Files and Release in GitHub

Cleanup integration test resources:
  key: CITR
  other:
    clean-working-dir: true
  docker:
    image: maven.earthdata.nasa.gov/cumulus_orca
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository

  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        bash bin/cleanup-integration.sh
variables:
  DEPLOYMENT: sandbox
  ORCA_VERSION: 4.0.1
  RELEASE_FLAG: 'false'
  REPORT_BUILD_STATUS: 'true'
  SECRET_GITHUB_EMAIL: BAMSCRT@0@0@HYUkicwfEqt17JZaZuGYmtmRHrnDySiT+kQkBQa7/Rg7IQgl1lUvbncMUu0Wx2k1ayHojNkh2TdOlF0kJ5tw6Q== #encrypted
  SECRET_GITHUB_TOKEN: BAMSCRT@0@0@nPxyXQXMyE6zm3B1oI8Goma78s0H1fJD4vHy6+dpBQJpjDI2ekbcvCAOI8AyjYiILPhqi2w4fT0fx9MFVXxz2JPTp5uPNzG3GM/8XSUgvYo= #encrypted
  SECRET_GITHUB_USER: BAMSCRT@0@0@fFtitNITDsAjJqK2ZXjhnBZ96z2775QLzGR1Xz557gSl8HxxBaTD3Fbmp+HUbpfx  #encrypted
  AWS_DEFAULT_REGION: us-west-2
  AWS_ACCESS_KEY_ID: REPLACE ME
  AWS_SECRET_ACCESS_KEY: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  DR_AWS_ACCESS_KEY_ID: REPLACE ME
  DR_AWS_SECRET_ACCESS_KEY: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  RDS_SECURITY_GROUP: REPLACE ME
  RDS_ENGINE_VERSION: 10.18
  RDS_USER_ACCESS_SECRET_ARN: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  AWS_SUBNET_ID1: REPLACE ME
  AWS_SUBNET_ID2: REPLACE ME
  VPC_ID: REPLACE ME
  CUMULUS_ORCA_DEPLOY_TEMPLATE_VERSION: release/v11.1.1-v4.0.1
  PREFIX: REPLACE ME
  DB_ADMIN_USERNAME: postgres
  DB_ADMIN_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  DB_USER_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  CMR_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  CMR_USERNAME: username
  EARTHDATA_CLIENT_ID: REPLACE ME
  EARTHDATA_CLIENT_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  DB_HOST_ENDPOINT: REPLACE ME
  
repositories:
- orca test branch: #this is created by CICD team from https://ci.earthdata.nasa.gov/. Contact Venku Jayanti with any issues.
    scope: global
triggers:
- polling: # Does not actually poll, as we do not have webhooks enabled.
    period: '60' #time in seconds
branches:
  create: for-new-branch
  delete:
    after-deleted-days: 7
    after-inactive-days: 30
  link-to-jira: true
---
version: 2
plan:
  key: ORCA-PN
plan-permissions:
- users:
  - bhazuka
  - andrew.dorn
  - rizbi.hassan
  - scott.saxon

  permissions:
  - view
  - edit
  - build
  - clone
  - admin
...



# ----------------------------------------------------------------------------------------------------------------------


---
version: 2
plan:
  project-key: ORCA
  key: DPT
  name: Deploy-plan-test
stages:
- Deploy DR ORCA buckets:
    manual: true
    final: false
    jobs:
    - Deploy DR ORCA buckets
#deploy RDS cluster for integration test
#TODO ORCA-462: move to a different stage or even to a new plan for better maintenance.
- Deploy Dev RDS Stack:
    manual: true
    final: false
    jobs:
    - Deploy RDS cluster

#deploy orca and cumulus for integration test
- Deploy Dev Cumulus and ORCA Stack:
    manual: true
    final: false
    jobs:
    - Deploy cumulus and orca

- Cleanup Integration Test:
    manual: true
    final: false
    jobs:
    - Cleanup integration test resources

Deploy DR ORCA buckets:
  key: DDROB
  other:
    clean-working-dir: true
  docker:
    image: maven.earthdata.nasa.gov/cumulus_orca
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        bash integration_test/deploy-dr-buckets.sh
#job for deploying cumulus and orca
Deploy RDS cluster:
  key: DRC
  other:
    clean-working-dir: true
  docker:
    image: maven.earthdata.nasa.gov/cumulus_orca
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        bash bin/deployment-rds.sh

#job for deploying cumulus and orca
Deploy cumulus and orca:
  key: DCO
  other:
    clean-working-dir: true
    # Some plugin configurations are not supported by YAML Specs
  docker:
    image: maven.earthdata.nasa.gov/cumulus_orca
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository

  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        bash bin/deployment-cumulus-orca.sh

Cleanup integration test resources:
  key: CITR
  other:
    clean-working-dir: true
  docker:
    image: maven.earthdata.nasa.gov/cumulus_orca
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository

  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        bash bin/cleanup-integration.sh
variables:
  DEPLOYMENT: sandbox
  ORCA_VERSION: 4.0.1
  REPORT_BUILD_STATUS: 'true'
  AWS_DEFAULT_REGION: us-west-2
  AWS_ACCESS_KEY_ID: REPLACE ME
  AWS_SECRET_ACCESS_KEY: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  DR_AWS_ACCESS_KEY_ID: REPLACE ME
  DR_AWS_SECRET_ACCESS_KEY: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  RDS_SECURITY_GROUP: REPLACE ME
  RDS_ENGINE_VERSION: 10.18
  RDS_USER_ACCESS_SECRET_ARN: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  AWS_SUBNET_ID1: REPLACE ME
  AWS_SUBNET_ID2: REPLACE ME
  VPC_ID: REPLACE ME
  CUMULUS_ORCA_DEPLOY_TEMPLATE_VERSION: release/v11.1.1-v4.0.1
  PREFIX: REPLACE ME
  DB_ADMIN_USERNAME: postgres
  DB_ADMIN_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  DB_USER_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  CMR_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  CMR_USERNAME: username
  EARTHDATA_CLIENT_ID: REPLACE ME
  EARTHDATA_CLIENT_PASSWORD: BAMSCRT@0@0@eYcVOgzAUh3Ar0/flmZ1jQ==  #encrypted
  DB_HOST_ENDPOINT: REPLACE ME
  
repositories:
- orca test branch: #this is created by CICD team from https://ci.earthdata.nasa.gov/. Contact Venku Jayanti with any issues.
    scope: global
triggers:
- polling: # Does not actually poll, as we do not have webhooks enabled.
    period: '60' #time in seconds
branches:
  create: for-new-branch
  delete:
    after-deleted-days: 7
    after-inactive-days: 30
  link-to-jira: true
---
version: 2
plan:
  key: ORCA-DPT
plan-permissions:
- users:
  - bhazuka
  - andrew.dorn
  - rizbi.hassan
  - scott.saxon

  permissions:
  - view
  - edit
  - build
  - clone
  - admin
...
