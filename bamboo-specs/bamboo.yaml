---
version: 2
plan:
  project-key: ORCA
  key: OIC
  name: ORCA Integrator Code
stages:
- Setup Env:
    manual: false
    final: false
    jobs:
    - Set Pending Github Status
- Default Stage:
    manual: false
    final: false
    jobs:
    - Build and Test
    - Python snyk
- Clean Up and Report:
    manual: false
    final: false
    jobs:
    - Report Status
- Release Stage:
    manual: true
    final: false
    jobs:
    - Release ORCA Documentation
    - Release ORCA Code
Set Pending Github Status:
  key: SPGS
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        set -ex
        ./bin/set_status.sh pending ${bamboo.resultsUrl} "CI Running"
      description: Set Pending Status
Build and Test:
  key: JOB1
  other:
    clean-working-dir: true
  docker:
    image: amazonlinux:2
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments: []
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: checkout code
  - script:
      interpreter: SHELL
      scripts:
      - "#!/bin/bash\n\nexport NODE_VERSION \"12.x\"\nexport TERRAFORM_VERSION \"0.13.6\"\n\n# Add NodeJS and Yarn repos & update package index\ncurl -sL https://rpm.nodesource.com/setup_${NODE_VERSION} | bash - \ncurl -sL https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo\nyum update -y\n\n# CLI utilities\nyum install -y gcc git make openssl unzip wget zip\n\n# Python 3 & NodeJS\nyum install -y python3-devel\nyum install -y nodejs yarn\n\n# AWS & Terraform\nyum install -y awscli\nwget \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\"\nunzip *.zip\nchmod +x terraform\nmv terraform /usr/local/bin\n\n# SSM SessionManager plugin\ncurl \"https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm\" -o \"session-manager-plugin.rpm\"\nyum install -y session-manager-plugin.rpm\n\nbin/run_tests.sh"
      description: run all tests
  - script:
      interpreter: SHELL
      scripts:
      - "#!/bin/bash\n## This script creates a file as a method of letting cleanup jobs know if it was reached, this allows github failure notifications to be sent if the job failed. \nset -e \ntouch success.flag"
      description: Set Success Flag
  final-tasks:
  - script:
      interpreter: SHELL
      scripts:
      - "#!/bin/bash\n## This script looks for the output from the \"Set job success flag\" script and reports failure to github if it is not present\nset -e\n\nif [[ ! -f success.flag ]]; then \n  echo \"Job failed, sending failure notice to github\"\n  ./bin/set_status.sh failure ${bamboo.resultsUrl} \"Testing Step Failed\"\nfi"
      description: report failure to github
Python snyk:
  key: PS
  other:
    clean-working-dir: true
  docker:
    image: maven.earthdata.nasa.gov/node:snyk
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments:
    - --net=host
  tasks:
  - script:
      interpreter: SHELL
      scripts:
      - chown -R 500:502 .
      description: change owner
  - clean:
      description: clean up working dir
  - checkout:
      force-clean-build: 'false'
      description: checkout source
  - script:
      interpreter: SHELL
      scripts:
      - "npm install snyk-to-html -g\ncat > scan.sh <<EOF\nsnyk test --json --file=\\$1 --package-manager=pip\nEOF\necho $bamboo_hello\nfind . -name requirement*.txt\nchmod +x scan.sh\nfor pom in $(find . -name requirements.txt);\ndo\n snyk test --json --file=$pom --package-manager=pip > report.json;\n filename=$(dirname $pom |  sed s'/\\.\\///')\n snyk-to-html -i report.json -o \"$filename.html\";\ndone \nchown -R 500:502 .\n\n#cat > scan.sh <<EOF\n#!/bin/bash\n#python3.7 -m venv snyk-test\n#source snyk-test/bin/activate\n#update-alternatives --install /tmp/snyk-test/bin/python  python /usr/local/bin/python3.7 1\n#pip install -r pip_requirements.txt\n#snyk test --json --package-manager=pip --file=data/mask_fill_pip_requirements.txt > pip_report.json\n#snyk-to-html -i pip_report.json -o pip_results.html\n#snyk test --json --file=data/mask_fill_conda_requirements.txt > conda_report.json\n#snyk-to-html -i conda_report.json -o conda_results.html\n#EOF\n#chmod +x scan.sh\n#docker run --rm -v $PWD:/tmp -w /tmp maven.earthdata.nasa.gov/snyk:py ./scan.sh"
      description: snyk scan
  artifacts:
  - name: html report
    pattern: '**/*.html'
    shared: false
    required: true
Report Status:
  key: RS
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  final-tasks:
  - script:
      interpreter: SHELL
      scripts:
      - "#!/bin/bash \nset -e\n./bin/set_status.sh success ${bamboo.resultsUrl} \"Build Success\""
      description: Report Success to GitHub
Release ORCA Documentation:
  key: ROD
  description: Releases ORCA Documentation to nasa.github.io/cumulus-orca
  docker:
    image: node:12.15.0
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments: []
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash

        set -ex

        if [ ! -f "bin/create_release_documentation.sh" ]; then
          echo "ERROR: create_release_documentation.sh script does not exist!"
          exit 0
        fi

        bin/create_release_documentation.sh
      description: Run documentation release script
  artifact-subscriptions: []
Release ORCA Code:
  key: RO
  description: Creates a GitHub Release and uploads artifacts for release
  docker:
    image: amazonlinux:2
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments: []
  tasks:
  - script:
      interpreter: SHELL
      scripts:
      - "## This script removes the \"source\" subdirectory which all jobs in this stage utilize.   This ensures that there's nothing left over from previous runs. \n## This is required as the checkout job does not interface correctly with docker in all instances. \n\nrm -rf ./source\nmkdir source\nrm -rf dist"
      description: Clean Working Directory
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - "#!/bin/bash\n\nexport NODE_VERSION \"12.x\"\nexport TERRAFORM_VERSION \"0.13.6\"\n\n# Add NodeJS and Yarn repos & update package index\ncurl -sL https://rpm.nodesource.com/setup_${NODE_VERSION} | bash - \ncurl -sL https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo\nyum update -y\n\n# CLI utilities\nyum install -y gcc git make openssl unzip wget zip\n\n# Python 3 & NodeJS\nyum install -y python3-devel\nyum install -y nodejs yarn\n\n# AWS & Terraform\nyum install -y awscli\n#wget \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\"\n#unzip *.zip\n#chmod +x terraform\n#mv terraform /usr/local/bin\n\n# SSM SessionManager plugin\ncurl \"https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm\" -o \"session-manager-plugin.rpm\"\nyum install -y session-manager-plugin.rpm\n\nset -ex\nbin/build_release_package.sh"
      description: Create Release Files and Release in GitHub
variables:
  ORCA_VERSION: 0.0.1
  RELEASE_FLAG: 'false'
  REPORT_BUILD_STATUS: 'true'
repositories:
- orca-develop: #this is created by CICD team from https://ci.earthdata.nasa.gov/. Contact Venku Jayanti with any issues.
    scope: global
triggers:
- polling:
    period: '60' #time in seconds
branches:
  create: for-new-branch
  delete:
    after-deleted-days: 7
    after-inactive-days: 30
  link-to-jira: true
other:
  concurrent-build-plugin: '1'
---
version: 2
plan:
  key: ORCA-OIC
plan-permissions:
- users:
  - bhazuka
  - andrew.dorn
  - rizbi.hassan
  - scott.saxon

  permissions:
  - view
  - edit
  - build
  - clone
  - admin
...