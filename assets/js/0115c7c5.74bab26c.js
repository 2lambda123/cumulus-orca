"use strict";(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[4672],{3905:function(e,a,t){t.d(a,{Zo:function(){return l},kt:function(){return u}});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=r.createContext({}),c=function(e){var a=r.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},l=function(e){var a=c(e.components);return r.createElement(s.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},_=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),_=c(t),u=n,d=_["".concat(s,".").concat(u)]||_[u]||m[u]||i;return t?r.createElement(d,o(o({ref:a},l),{},{components:t})):r.createElement(d,o({ref:a},l))}));function u(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,o=new Array(i);o[0]=_;var p={};for(var s in a)hasOwnProperty.call(a,s)&&(p[s]=a[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}_.displayName="MDXCreateElement"},1004:function(e,a,t){t.r(a),t.d(a,{assets:function(){return l},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return m}});var r=t(7462),n=t(3366),i=(t(7294),t(3905)),o=["components"],p={id:"research-APIGateway",title:"API Gateway Research Notes",description:"Research Notes on API Gateway."},s=void 0,c={unversionedId:"developer/research/research-APIGateway",id:"developer/research/research-APIGateway",title:"API Gateway Research Notes",description:"Research Notes on API Gateway.",source:"@site/docs/developer/research/research-APIGateway.md",sourceDirName:"developer/research",slug:"/developer/research/research-APIGateway",permalink:"/cumulus-orca/docs/developer/research/research-APIGateway",draft:!1,editUrl:"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/developer/research/research-APIGateway.md",tags:[],version:"current",frontMatter:{id:"research-APIGateway",title:"API Gateway Research Notes",description:"Research Notes on API Gateway."},sidebar:"dev_guide",previous:{title:"Localstack Research Notes",permalink:"/cumulus-orca/docs/developer/research/research-localstack"},next:{title:"ORCA Reconciliation",permalink:"/cumulus-orca/docs/developer/research/research-reconciliation"}},l={},m=[{value:"Overview",id:"overview",level:2},{value:"Implementation Details",id:"implementation-details",level:3},{value:"Future Direction",id:"future-direction",level:3},{value:"Sources",id:"sources",level:4}],_={toc:m};function u(e){var a=e.components,t=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},_,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://aws.amazon.com/api-gateway/"},"AWS API Gateways")," are used to define access to a service."),(0,i.kt)("h3",{id:"implementation-details"},"Implementation Details"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Requires several components in Terraform."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_rest_api"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_api_gateway_rest_api" "[name]_api" {\n  name = "${var.prefix}_[name]_api"\n  }\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_resource"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_api_gateway_resource" "[name]_api_resource" {\n  path_part   = "{proxy+}" # This acts as a "catch all"\n  parent_id   = aws_api_gateway_rest_api.[name]_api.root_resource_id\n  rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n  }\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_method"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_api_gateway_method" "[name]_api_method" {\n  rest_api_id   = aws_api_gateway_rest_api.[name]_api.id\n  resource_id   = aws_api_gateway_resource.[name]_api_resource.id\n  http_method = "ANY"\n  # todo: Make sure this is locked down against external access.\n  authorization = "NONE"\n  }\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_integration"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_api_gateway_integration" "integration" {\n  rest_api_id             = aws_api_gateway_rest_api.[name]_api.id\n  resource_id             = aws_api_gateway_resource.[name]_api_resource.id\n  http_method             = aws_api_gateway_method.[name]_api_method.http_method\n  integration_http_method = "POST"\n  type                    = "AWS"\n  uri                     = aws_lambda_function.[name].invoke_arn\n  }\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_method_response"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_api_gateway_method_response" "[name]_response_200" {\n  rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n  resource_id = aws_api_gateway_resource.[name]_api_resource.id\n  http_method = aws_api_gateway_method.[name]_api_method.http_method\n  status_code = "200"\n  }\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_integration_response"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_api_gateway_integration_response" "[name]_api_response" {\ndepends_on = [aws_api_gateway_integration.[name]_api_integration]\nrest_api_id = aws_api_gateway_rest_api.[name]_api.id\nresource_id = aws_api_gateway_resource.[name]_api_resource.id\nhttp_method = aws_api_gateway_method.[name]_api_method.http_method\nstatus_code = aws_api_gateway_method_response.[name]_response_200.status_code\n\n# Transforms the backend JSON response to XML\n# "stackTrace" being present in the returned dictionary will cause a return code of 500\n# This will happen automatically if your Python raises an unhandled exception.\n# You can return a dictionary with a manually set "httpStatus" key with an int value to set the return code of the HTTP request.\nresponse_templates = {\n  "application/json" = <<EOF\n  #set($inputRoot = $input.path(\'$\'))\n  $input.json("$")\n  \n  #if($input.path("stackTrace") != \'\')\n  #set($context.responseOverride.status = 500)\n  #elseif($input.path("httpStatus") != \'\')\n  #set($context.responseOverride.status = $input.path(\'httpStatus\'))\n  #end\n  EOF\n    }\n  }\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_deployment"))),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'  resource "aws_api_gateway_deployment" "[name]_api_deployment" {\n    rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n    stage_name    = "orca" #add your stage name\n  }\n')),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_lambda_permission"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_lambda_permission" "[name]_api_permission" {\n  statement_id  = "AllowExecutionFromAPIGateway"\n  action        = "lambda:InvokeFunction"\n  function_name = aws_lambda_function.[name].function_name\n  principal     = "apigateway.amazonaws.com"\n\n  # More: http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n  # Alternate potential source_arn: "${aws_api_gateway_rest_api.[name]_api.execution_arn}/*/$ {aws_api_gateway_method.request_status[name]api_method.http_method}${aws_api_gateway_resource.[name]_api_resource.path}"\n  # source_arn = "${aws_api_gateway_rest_api.[name]_api.execution_arn}/*/${aws_api_gateway_method.[name]_api_method.http_method}${aws_api_gateway_resource.[name]_api_resource.path}"\n}\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"aws_api_gateway_rest_api_policy"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'resource "aws_lambda_permission" "[name]_api_resource_policy" {\n\n    rest_api_id = aws_api_gateway_rest_api.[name]_api.id\n    policy = <<EOF\n  {\n    "Version": "2012-10-17",\n    "Statement": [\n      {\n        "Effect": "Allow",\n        "Principal": {\n          "AWS": "*"\n        },\n        "Action": "execute-api:Invoke",\n        "Resource": "${aws_api_gateway_rest_api.[name]_api.execution_arn}"\n      }\n    ]\n  }\n  EOF\n}\n'))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Proper HTTP error codes can be returned from a Lambda to the gateway via a dictionary, as shown in ",(0,i.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/handle-errors-in-lambda-integration.html"},"Handle Lambda errors in API Gateway")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For more potential patterns, see ",(0,i.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-integration-settings-integration-response.html"},"https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-integration-settings-integration-response.html")," and ",(0,i.kt)("a",{parentName:"li",href:"https://aws.amazon.com/blogs/compute/error-handling-patterns-in-amazon-api-gateway-and-aws-lambda/"},"https://aws.amazon.com/blogs/compute/error-handling-patterns-in-amazon-api-gateway-and-aws-lambda/")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"In order to access a private API, a ",(0,i.kt)("inlineCode",{parentName:"p"},"VPC endpoint")," has to be created in VPC. Secondly, a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-resource-policies-create-attach.html"},"resource policy")," needs to be created and attached to the API."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"For more information, see\n",(0,i.kt)("a",{parentName:"li",href:"https://medium.com/@ilia.lazebnik/simplifying-aws-private-api-gateway-vpc-endpoint-association-with-terraform-b379a247afbf"},"https://medium.com/@ilia.lazebnik/simplifying-aws-private-api-gateway-vpc-endpoint-association-with-terraform-b379a247afbf")," and\n",(0,i.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-apis.html#apigateway-private-api-test-invoke-url"},"https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-apis.html#apigateway-private-api-test-invoke-url"))))),(0,i.kt)("h3",{id:"future-direction"},"Future Direction"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'This code is not secure. See the "authorization" value in ',(0,i.kt)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method"},"aws_api_gateway_method"),".")),(0,i.kt)("h4",{id:"sources"},"Sources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_integration"},"Terraform aws_api_gateway_integration")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_permission"},"Terraform aws_lambda_permission")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/apigateway/latest/developerguide/handle-errors-in-lambda-integration.html"},"Handle Lambda errors in API Gateway")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/apigateway/api-reference/handling-errors/"},"Handling Errors in API Gateway"))))}u.isMDXComponent=!0}}]);