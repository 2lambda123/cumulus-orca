"use strict";(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[6181],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5624:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"versioning-releases",title:"ORCA Versioning and Releases",description:"Provides information to developers on semantic versioning and the release process."},s=void 0,p={unversionedId:"developer/development-guide/code/versioning-releases",id:"developer/development-guide/code/versioning-releases",title:"ORCA Versioning and Releases",description:"Provides information to developers on semantic versioning and the release process.",source:"@site/docs/developer/development-guide/code/versioning-releases.md",sourceDirName:"developer/development-guide/code",slug:"/developer/development-guide/code/versioning-releases",permalink:"/cumulus-orca/docs/developer/development-guide/code/versioning-releases",draft:!1,editUrl:"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/developer/development-guide/code/versioning-releases.md",tags:[],version:"current",frontMatter:{id:"versioning-releases",title:"ORCA Versioning and Releases",description:"Provides information to developers on semantic versioning and the release process."},sidebar:"dev_guide",previous:{title:"Best Practices",permalink:"/cumulus-orca/docs/developer/development-guide/code/best-practices"},next:{title:"Running Pylint Against Your Code",permalink:"/cumulus-orca/docs/developer/development-guide/code/linting"}},u={},d=[{value:"Versioning",id:"versioning",level:2},{value:"Release Process",id:"release-process",level:2},{value:"Create a release branch",id:"create-a-release-branch",level:3},{value:"Update CHANGELOG.md",id:"update-changelogmd",level:3},{value:"Create a git tag for the release",id:"create-a-git-tag-for-the-release",level:3},{value:"Running the deployment",id:"running-the-deployment",level:3},{value:"Creating a Bamboo deployment plan",id:"creating-a-bamboo-deployment-plan",level:4},{value:"Create a new ORCA release on github",id:"create-a-new-orca-release-on-github",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Delete and regenerate the tag",id:"delete-and-regenerate-the-tag",level:3},{value:"Deploying RDS cluster and Cumulus ORCA modules in bamboo",id:"deploying-rds-cluster-and-cumulus-orca-modules-in-bamboo",level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Much of this documentation is also found at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus/blob/master/docs/development/release.md"},"Cumulus"),"."),(0,o.kt)("h2",{id:"versioning"},"Versioning"),(0,o.kt)("p",null,"The ORCA team uses semantic versioning. More information about semantic\nversioning can be found ",(0,o.kt)("a",{parentName:"p",href:"https://semver.org/"},"here"),"."),(0,o.kt)("h2",{id:"release-process"},"Release Process"),(0,o.kt)("h3",{id:"create-a-release-branch"},"Create a release branch"),(0,o.kt)("p",null,"From develop, create a new release branch from develop following the\n",(0,o.kt)("inlineCode",{parentName:"p"},"release-MAJOR.MINOR.x"),". For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"release-1.14.1"),". Push this branch\nto github if you created it locally."),(0,o.kt)("h3",{id:"update-changelogmd"},"Update CHANGELOG.md"),(0,o.kt)("p",null,"Update the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus-orca/blob/master/CHANGELOG.md"},"CHANGELOG.md"),".\nPut a header under the 'Unreleased' section with the new version number and\nthe date."),(0,o.kt)("h3",{id:"create-a-git-tag-for-the-release"},"Create a git tag for the release"),(0,o.kt)("p",null,"Make sure you're on the latest commit of the release branch."),(0,o.kt)("p",null,"Create and push a new git tag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'    git tag -a vx.y.z -m "Release x.y.z"\n    git push origin vx.y.z\n')),(0,o.kt)("h3",{id:"running-the-deployment"},"Running the deployment"),(0,o.kt)("p",null,"Publishing of new releases is handled by a Bamboo release plan and is manually\ntriggered."),(0,o.kt)("p",null,"If you created a new release branch in step one, you will need to create a new\nbamboo deployment plan."),(0,o.kt)("h4",{id:"creating-a-bamboo-deployment-plan"},"Creating a Bamboo deployment plan"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The deployment plan is already created in Bamboo using ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/nasa/cumulus-orca/tree/develop/bamboo-specs"},"Bamboo Specs"),". If you have updated the ",(0,o.kt)("inlineCode",{parentName:"li"},"bamboo.yaml")," config file, you will need to import the updated spec file from Bamboo specs UI. Under ",(0,o.kt)("inlineCode",{parentName:"li"},"Specs")," section, click on the ",(0,o.kt)("inlineCode",{parentName:"li"},"Set up Specs Repository"),". On the ",(0,o.kt)("inlineCode",{parentName:"li"},"Project Type"),", select ",(0,o.kt)("inlineCode",{parentName:"li"},"Build Project")," and then ",(0,o.kt)("inlineCode",{parentName:"li"},"ORCA"),". On the Specs repository, select the repository host as ",(0,o.kt)("inlineCode",{parentName:"li"},"orca-develop"),". Note that choosing the wrong repository branch will cause issues in deployment. ",(0,o.kt)("inlineCode",{parentName:"li"},"ORCA repo")," repository host is for ",(0,o.kt)("inlineCode",{parentName:"li"},"master")," branch and ",(0,o.kt)("inlineCode",{parentName:"li"},"orca test branch")," host is for ",(0,o.kt)("inlineCode",{parentName:"li"},"feature/ORCA-test-bamboo")," branch used for testing and prototyping. Contact ",(0,o.kt)("inlineCode",{parentName:"li"},"Venku Jayanti")," from CI/CD team for additional support.\nIn the ORCA project (",(0,o.kt)("a",{parentName:"li",href:"https://ci.earthdata.nasa.gov/browse/ORCA-OI"},"https://ci.earthdata.nasa.gov/browse/ORCA-OI"),"), scroll to the top left of the page where it indicates ",(0,o.kt)("inlineCode",{parentName:"li"},"Plan branch"),". From the ",(0,o.kt)("inlineCode",{parentName:"li"},"Plan branch")," dropdown menu, select the release branch you created for the release which should be in the format ",(0,o.kt)("inlineCode",{parentName:"li"},"release-X.X.X"),"."),(0,o.kt)("li",{parentName:"ol"},"Once inside the release branch page, scroll to the top right of the page and click ",(0,o.kt)("inlineCode",{parentName:"li"},"Actions"),"-> ",(0,o.kt)("inlineCode",{parentName:"li"},"Configure branch"),"."),(0,o.kt)("li",{parentName:"ol"},"On the ",(0,o.kt)("inlineCode",{parentName:"li"},"Plan branch configuration")," page, under ",(0,o.kt)("inlineCode",{parentName:"li"},"Plan branch configuration"),", enable 'Change Trigger'. Set the\nTrigger type to manual, and this will prevent commits to the branch from triggering the build plan."),(0,o.kt)("li",{parentName:"ol"},"Click on the ",(0,o.kt)("inlineCode",{parentName:"li"},"Variables")," tab.\nEnsure that you are on your branch plan and not the master plan. Click on the ",(0,o.kt)("inlineCode",{parentName:"li"},"Choose from inherited variables")," dropdown menu.\nexcept in special cases such as incompatible backport branches. Then add and set the following variables:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"}," * ORCA_VERSION: `<version number>`\n * RELEASE_FLAG: true\n * SECRET_GITHUB_EMAIL: `<secret github email>`\n * SECRET_GITHUB_TOKEN: `<secret github token>`\n * SECRET_GITHUB_USER: `<secret github user>`\n")),"   Contact ORCA team to know values of the three github variables."),(0,o.kt)("li",{parentName:"ol"},"Run the branch using the 'Run' button in the top right.")),(0,o.kt)("p",null,"Bamboo will build and run unit tests against that tagged release."),(0,o.kt)("h2",{id:"create-a-new-orca-release-on-github"},"Create a new ORCA release on github"),(0,o.kt)("p",null,"The release is automated in Bamboo, but the step must be manually started. If\nyou set the ",(0,o.kt)("inlineCode",{parentName:"p"},"RELEASE_FLAG")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," and the build steps passed, you will\nbe able to run the manual 'Release' step in Bamboo."),(0,o.kt)("p",null,"The CI release scripts will create a release based on the release version tag,\nas well as uploading release artifacts to the Github release for the Terraform\nmodules provided by Cumulus. The Terraform release artifacts include:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"A multi-module Terraform .zip artifact containing filtered copies of the\ntf-modules, packages, and tasks directories for use as Terraform module sources.")),(0,o.kt)("p",null,"Just make sure to verify the appropriate .zip files are present on Github after\nthe release process is complete."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Merge the base branch back into develop and master")),(0,o.kt)("p",null,"Finally, you need to merge the version update changes back into develop and\nmaster."),(0,o.kt)("p",null,"If this is the latest version, create the PRs to merge the release branch\ninto develop and master. "),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Note: ")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},'Do not squash this merge. Doing so will make the "compare" view from step 4\nshow an incorrect diff, because the tag is linked to a specific commit on the\nbase branch.'))),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h3",{id:"delete-and-regenerate-the-tag"},"Delete and regenerate the tag"),(0,o.kt)("p",null,"To delete a published tag to re-tag, follow these steps:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"    git tag -d vx.y.z\n    git push -d origin vx.y.z\n")),(0,o.kt)("h2",{id:"deploying-rds-cluster-and-cumulus-orca-modules-in-bamboo"},"Deploying RDS cluster and Cumulus ORCA modules in bamboo"),(0,o.kt)("p",null,"For testing, use your feature branch in cumulus-orca github repo and ",(0,o.kt)("inlineCode",{parentName:"p"},"ORCA-test-branch")," linked repo in bamboo specs. "),(0,o.kt)("p",null,"While running the ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy Dev RDS Stack")," stage, replace the following variables with yours. This is because some variables are sensitive and some will vary depending upon the user running the pipeline. Hitting 'play' next to ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy Dev RDS Stack")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy Dev Cumulus and ORCA Stack")," brings up a checkbox list to run multiple jobs at once. Note that none of the checkboxes should be checked."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"AWS_ACCESS_KEY_ID"),(0,o.kt)("li",{parentName:"ul"},"AWS_SECRET_ACCESS_KEY"),(0,o.kt)("li",{parentName:"ul"},"PREFIX"),(0,o.kt)("li",{parentName:"ul"},"AWS_ACCOUNT_ID"),(0,o.kt)("li",{parentName:"ul"},"DB_ADMIN_PASSWORD"),(0,o.kt)("li",{parentName:"ul"},"DB_USER_PASSWORD")),(0,o.kt)("p",null,"Make sure the proper buckets, dynamoDB table and the EC2 key pair are first created manually using the same prefix before running the pipeline. See this cumulus ",(0,o.kt)("a",{parentName:"p",href:"https://nasa.github.io/cumulus/docs/deployment/deployment-readme"},"documentation")," and ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus-orca/blob/develop/website/docs/developer/deployment-guide/deployment-with-cumulus.md#modifying-cumulus-tfterraformtfvars"},"deployment with cumulus documentation")," for additional details. Typically, these are the buckets that need to be created first"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<PREFIX>-internal")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<PREFIX>-level0")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<PREFIX>-public")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<PREFIX>-private")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<PREFIX>-protected")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<PREFIX>-orca-primary")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"<PREFIX>-tf-state")," (for storing the terraform state file)")),(0,o.kt)("p",null,"Note that the ",(0,o.kt)("inlineCode",{parentName:"p"},"<PREFIX>-orca-primary")," bucket should be created in the DR OU if we want a full test. This will also need a cross account policy applied to it as well which should be similar to this ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus-orca/blob/develop/website/docs/developer/research/research-s3-bucket-policies.md#reports-bucket"},"policy"),"."),(0,o.kt)("p",null,"The bucket can be created using the following CLI command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"aws s3api create-bucket --bucket <BUCKET_NAME>  --region us-west-2 --create-bucket-configuration LocationConstraint=us-west-2\n\n")),(0,o.kt)("p",null,"In addition to this, the dynamodb table and bucket version need to created as well."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"   aws dynamodb create-table \\\n      --table-name <PREFIX>-tf-locks \\\n      --attribute-definitions AttributeName=LockID,AttributeType=S \\\n      --key-schema AttributeName=LockID,KeyType=HASH \\\n      --billing-mode PAY_PER_REQUEST \\\n      --region us-west-2\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"      aws s3api put-bucket-versioning \\\n    --bucket <PREFIX>-tf-state \\\n    --versioning-configuration Status=Enabled\n")),(0,o.kt)("p",null,"The EC2 key pair can be created using the AWS CLI:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"aws ec2 create-key-pair --key-name <PREFIX>\n")),(0,o.kt)("p",null,"For ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy Dev Cumulus and ORCA Stack")," stage, add the following variables. The RDS variables ",(0,o.kt)("inlineCode",{parentName:"p"},"RDS_SECURITY_GROUP"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"RDS_USER_ACCESS_SECRET_ARN")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"DB_HOST_ENDPOINT")," can be found from output logs of the previous ",(0,o.kt)("inlineCode",{parentName:"p"},"Deploy Dev RDS Stack")," stage. Note that a new earthdata application will need to be first created if using a new prefix for new deployment which will give the values for ",(0,o.kt)("inlineCode",{parentName:"p"},"EARTHDATA_CLIENT_ID")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"EARTHDATA_CLIENT_PASSWORD"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"CUMULUS_ORCA_DEPLOY_TEMPLATE_VERSION")," is the branch you want to check out in the ",(0,o.kt)("a",{parentName:"p",href:"https://git.earthdata.nasa.gov/projects/ORCA/repos/cumulus-orca-deploy-template/browse"},"deployment repo")," such as ",(0,o.kt)("inlineCode",{parentName:"p"},"v11.1.1-v4.0.1"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"RDS_SECURITY_GROUP"),(0,o.kt)("li",{parentName:"ul"},"RDS_USER_ACCESS_SECRET_ARN"),(0,o.kt)("li",{parentName:"ul"},"DB_HOST_ENDPOINT"),(0,o.kt)("li",{parentName:"ul"},"EARTHDATA_CLIENT_ID"),(0,o.kt)("li",{parentName:"ul"},"EARTHDATA_CLIENT_PASSWORD"),(0,o.kt)("li",{parentName:"ul"},"CUMULUS_ORCA_DEPLOY_TEMPLATE_VERSION")),(0,o.kt)("p",null,"Note that ",(0,o.kt)("inlineCode",{parentName:"p"},"RDS_USER_ACCESS_SECRET_ARN")," value from the initial run should be recorded, as they may be hidden on future deployments. In addition, the jobs may need to be run multiple times to get past deployment errors if there is one. If an error is raised saying ",(0,o.kt)("inlineCode",{parentName:"p"},"Cloudwatch log groups already exist"),", then manually delete all the cloudwatch log groups and corresponding lambdas having the same name as the log groups from the AWS console and retry running the job."))}m.isMDXComponent=!0}}]);