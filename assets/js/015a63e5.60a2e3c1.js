(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[8156],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return u}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),i=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=i(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=i(a),u=o,k=m["".concat(l,".").concat(u)]||m[u]||d[u]||s;return a?n.createElement(k,r(r({ref:t},p),{},{components:a})):n.createElement(k,r({ref:t},p))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=a.length,r=new Array(s);r[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var i=2;i<s;i++)r[i]=a[i];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3062:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return c},metadata:function(){return l},toc:function(){return i},default:function(){return d}});var n=a(2122),o=a(9756),s=(a(7294),a(3905)),r=["components"],c={id:"research-localstack",title:"Localstack Research Notes",description:"Research Notes on Localstack."},l={unversionedId:"developer/research/research-localstack",id:"developer/research/research-localstack",isDocsHomePage:!1,title:"Localstack Research Notes",description:"Research Notes on Localstack.",source:"@site/docs/developer/research/research-localstack.md",sourceDirName:"developer/research",slug:"/developer/research/research-localstack",permalink:"/cumulus-orca/docs/developer/research/research-localstack",editUrl:"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/developer/research/research-localstack.md",version:"current",frontMatter:{id:"research-localstack",title:"Localstack Research Notes",description:"Research Notes on Localstack."},sidebar:"dev_guide",previous:{title:"Introduction to ORCA Research",permalink:"/cumulus-orca/docs/developer/research/research-intro"},next:{title:"API Gateway Research Notes",permalink:"/cumulus-orca/docs/developer/research/research-APIGateway"}},i=[{value:"Overview",id:"overview",children:[{value:"Implementation Details",id:"implementation-details",children:[]},{value:"Setup details",id:"setup-details",children:[]},{value:"Examples of AWS services deployed using localstack",id:"examples-of-aws-services-deployed-using-localstack",children:[]},{value:"Deploying AWS resources using terraform and localstack",id:"deploying-aws-resources-using-terraform-and-localstack",children:[]},{value:"IDE for Localstack",id:"ide-for-localstack",children:[]},{value:"Known Limitations",id:"known-limitations",children:[]},{value:"Future Direction",id:"future-direction",children:[]}]}],p={toc:i};function d(e){var t=e.components,a=(0,o.Z)(e,r);return(0,s.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"overview"},"Overview"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/localstack/localstack"},"Localstack")," is a method of simulating an AWS environment locally.\nThis can be used to bypass the requirement of a remote sandbox environment, making testing easier."),(0,s.kt)("h3",{id:"implementation-details"},"Implementation Details"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Some features and not present, and some are locked behind the ",(0,s.kt)("a",{parentName:"li",href:"https://localstack.cloud/#pricing"},"Pro Version"),".",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"RDS is not present, but testing can be done with a local database."))),(0,s.kt)("li",{parentName:"ul"},"Can be run in a Docker container using Docker Compose."),(0,s.kt)("li",{parentName:"ul"},"Can be run directly via a docker command.",(0,s.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("pre",{parentName:"div"},(0,s.kt)("code",{parentName:"pre"},"docker run --rm -p 4566:4566 -p 4571:4571 localstack/localstack\n")))),(0,s.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Docker's localhost can be accessed on the parent machine at ",(0,s.kt)("a",{parentName:"p",href:"http://host.docker.internal"},"http://host.docker.internal"))))),(0,s.kt)("li",{parentName:"ul"},"Most services are accessible on port 4566, and starting the image lists them individually."),(0,s.kt)("li",{parentName:"ul"},"Data is not persisted between runs of the image.",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"S3 Bucket contents can be preserved by adding the following to ",(0,s.kt)("a",{parentName:"li",href:"https://git.cr.usgs.gov/LPDA/appeears/-/blob/feature/rds-setup/deployment/localstack/docker-compose.yaml"},"docker-compose.yaml"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre"},"DATA_DIR=/tmp/localstack/data\nvolumes: localstack-col:/tmp/localstack\n"))))),(0,s.kt)("li",{parentName:"ul"},"There currently is no page for services running in localstack.",(0,s.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},(0,s.kt)("a",{parentName:"p",href:"https://www.getcommandeer.com"},"Commandeer")," could theoretically be used to provide a UI, but make sure it is approved by IT.")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://aws.amazon.com/cli/"},"AWS CLI")," and ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/boto/botocore"},"botocore3")," can both contact Localstack if properly ",(0,s.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html"},"configured"),".",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"AWS credentials are not checked, and can therefore be dummy values."),(0,s.kt)("li",{parentName:"ul"},"Most commands work, including those for creating, modifying, and listing services. For example:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Localstack In Docker:")),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},"aws --endpoint-url=http://host.docker.internal:4566 s3 ls\n")),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Localstack Running Locally:")),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},"aws --endpoint-url=http://localhost:4566 s3 ls\n"))),(0,s.kt)("li",{parentName:"ul"},"Presently we are unsure if an AWS CLI profile pointing to Localstack precludes the need for '--endpoint-url'."))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.terraform.io/"},"Terraform")," can be used to deploy to Localstack.",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Since credentials are not checked, 'access_key' and 'secret_key' can be dummy values."),(0,s.kt)("li",{parentName:"ul"},"Since full permissions are granted be default, 'lambda-vpc-role' can also be a dummy value."),(0,s.kt)("li",{parentName:"ul"},"Terraform must be informed of Localstack's ports for services.",(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre"},'provider "aws"{\n  endpoints {\n    s3 = "http://host.docker.internal:4566"\n  }\n}\n')),(0,s.kt)("a",{parentName:"li",href:"https://git.cr.usgs.gov/LPDA/appeears/-/blob/feature/rds-setup/deployment/terraform/dev/main.tf"},"Full example here."))))),(0,s.kt)("h3",{id:"setup-details"},"Setup details"),(0,s.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Make sure you have Docker desktop installed in your laptop and approved by your local IT and security team."))),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"There are two ways to install localstack- either directly using docker command or by running a docker-compose.yaml file. The recommended way is by using docker compose since all changes will stay in one config file that can be changed according to use cases.")),(0,s.kt)("h4",{id:"docker-compose"},"Docker compose"),(0,s.kt)("p",null,"A sample docker-compose.yml file is shown below: "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'    version: "3.8"\n\n    services:\n      localstack:\n        container_name: localstack-container\n        image: localstack/localstack\n        ports:\n          - "53:53"\n          - "443:443"\n          - "4566:4566"\n          - "4571:4571"\n        environment:\n          - DEBUG=1\n          - DATA_DIR=/tmp/localstack/data # Local directory for saving persistent data\n          - DEFAULT_REGION=us-east-1\n          - LAMBDA_EXECUTOR=local #running lambda from local dir\n          - LAMBDA_REMOTE_DOCKER=0\n          - DOCKER_HOST=unix:///var/run/docker.sock\n          - HOST_TMP_FOLDER=/tmp/localstack\n        volumes:\n          - "/var/run/docker.sock:/var/run/docker.sock"\n')),(0,s.kt)("p",null,"From the command line, run ",(0,s.kt)("inlineCode",{parentName:"p"},"docker compose up")," from within the directory containing the docker-compose.yml file shown above to start localstack."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},"    C:\\Users\\test\\localstack-test>docker compose up\n    [+] Running 2/1\n      - Network localstack-test_default  Created                                                                                                                                                                   0.0s\n      - Container localstack-container   Created                                                                                                                                                                   0.1s\n    Attaching to localstack-container\n    localstack-container  | Waiting for all LocalStack services to be ready\n    localstack-container  | 2021-06-16 16:40:27,632 CRIT Supervisor is running as root.  Privileges were not dropped because no user is specified in the config file.  If you intend to run as root, you can set user=root in the config file to avoid this message.\n    localstack-container  | 2021-06-16 16:40:27,635 INFO supervisord started with pid 14\n    localstack-container  | 2021-06-16 16:40:28,638 INFO spawned: 'dashboard' with pid 20\n    localstack-container  | 2021-06-16 16:40:28,640 INFO spawned: 'infra' with pid 21\n    localstack-container  | 2021-06-16 16:40:28,645 INFO success: dashboard entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)\n    localstack-container  | 2021-06-16 16:40:28,645 INFO exited: dashboard (exit status 0; expected)\n    localstack-container  | (. .venv/bin/activate; exec bin/localstack start --host)\n    localstack-container  | Starting local dev environment. CTRL-C to quit.\n    localstack-container  | 2021-06-16 16:40:30,317 INFO success: infra entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n    localstack-container  |\n    localstack-container  | LocalStack version: 0.12.12\n    localstack-container  | LocalStack build date: 2021-06-15\n    localstack-container  | LocalStack build git hash: 48ac6ea8\n    localstack-container  |\n    localstack-container  | 2021-06-16T16:40:33:DEBUG:bootstrap.py: Loading plugins - scope \"services\", module \"localstack\": <function register_localstack_plugins at 0x7fd684268050>\n    localstack-container  | Starting edge router (https port 4566)...\n    localstack-container  | Starting mock ACM service on http port 4566 ...\n    localstack-container  | 2021-06-16T16:40:33:INFO:localstack.multiserver: Starting multi API server process on port 36131\n    localstack-container  | [2021-06-16 16:40:33 +0000] [22] [INFO] Running on https://0.0.0.0:4566 (CTRL + C to quit)\n    localstack-container  | 2021-06-16T16:40:33:INFO:hypercorn.error: Running on https://0.0.0.0:4566 (CTRL + C to quit)\n    localstack-container  | [2021-06-16 16:40:33 +0000] [22] [INFO] Running on http://0.0.0.0:36131 (CTRL + C to quit)\n    localstack-container  | 2021-06-16T16:40:33:INFO:hypercorn.error: Running on http://0.0.0.0:36131 (CTRL + C to quit)\n    localstack-container  | Waiting for all LocalStack services to be ready\n    localstack-container  | Starting mock API Gateway service on http port 4566 ...\n    localstack-container  | Starting mock CloudFormation service on http port 4566 ...\n    localstack-container  | Starting mock CloudWatch service on http port 4566 ...\n    localstack-container  | Starting mock DynamoDB service on http port 4566 ...\n    localstack-container  | Starting mock DynamoDB Streams service on http port 4566 ...\n    localstack-container  | Starting mock EC2 service on http port 4566 ...\n    localstack-container  | Starting mock ES service on http port 4566 ...\n    localstack-container  | Starting mock Firehose service on http port 4566 ...\n    localstack-container  | Starting mock IAM service on http port 4566 ...\n    localstack-container  | Starting mock STS service on http port 4566 ...\n    localstack-container  | Starting mock Kinesis service on http port 4566 ...\n    localstack-container  | Initializing DynamoDB Local with the following configuration:\n    localstack-container  | Port:   52091\n    localstack-container  | InMemory:       false\n    localstack-container  | DbPath: /tmp/localstack/data/dynamodb\n    localstack-container  | SharedDb:       false\n    localstack-container  | shouldDelayTransientStatuses:   false\n    localstack-container  | CorsParams:     *\n    localstack-container  | Starting mock KMS service on http port 4566 ...\n    localstack-container  |\n    localstack-container  | INFO[2021-06-16 16:40:34.915] Local KMS 3.9.1 (4e5eb289efb23f9059ae4b1f9896bad6c9a499f2)\n    localstack-container  | INFO[2021-06-16 16:40:34.936] No file found at path /init/seed.yaml; skipping seeding.\n    localstack-container  | INFO[2021-06-16 16:40:34.937] Data will be stored in /tmp/localstack/data\n    localstack-container  | INFO[2021-06-16 16:40:34.937] Local KMS started on 0.0.0.0:42519\n    localstack-container  | Listening at http://:::40789\n    localstack-container  | 2021-06-16 16:40:34,603:API:  * Running on all addresses.\n    localstack-container  |    WARNING: This is a development server. Do not use it in a production deployment.\n    localstack-container  | 2021-06-16 16:40:34,603:API:  * Running on http://172.21.0.2:39023/ (Press CTRL+C to quit)\n    localstack-container  | Starting mock Lambda service on http port 4566 ...\n    localstack-container  | Starting mock CloudWatch Logs service on http port 4566 ...\n    localstack-container  | Starting mock Redshift service on http port 4566 ...\n    localstack-container  | Starting mock Route53 service on http port 4566 ...\n")),(0,s.kt)("p",null,'Localstack is now running in docker. To verify that the services are running, check the link http://localhost:4566/ should show a status of "running".\nOpen the docker desktop and click on the container\'s CLI to open the container.\nInstall the AWS CLI to run CLI commands in the docker container.'),(0,s.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},(0,s.kt)("inlineCode",{parentName:"p"},"awslocal")," is a thin wrapper around the AWS CLI for use with LocalStack. This\nprevents the need for specifying ",(0,s.kt)("inlineCode",{parentName:"p"},"--endpoint-url")," every-time the AWS CLI\ncommand is run. To install ",(0,s.kt)("inlineCode",{parentName:"p"},"awslocal"),", run:\n",(0,s.kt)("inlineCode",{parentName:"p"},"pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org awscli-local")))),(0,s.kt)("h3",{id:"examples-of-aws-services-deployed-using-localstack"},"Examples of AWS services deployed using localstack"),(0,s.kt)("p",null,"Some examples of CLI commands and their corresponding outputs are shown below."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},'\n# Create the api gateway called test-api\nC:\\Users\\test\\localstack-test> awslocal apigateway create-rest-api --name test-api\n\nResponse: \n        {\n            "id": "0zqyew47ie",\n            "name": "test-api",\n            "createdDate": 1623862127,\n            "version": "V1",\n            "binaryMediaTypes": [],\n            "apiKeySource": "HEADER",\n            "endpointConfiguration": {\n                "types": [\n                    "EDGE"\n                ]\n            },\n            "tags": {},\n            "disableExecuteApiEndpoint": false\n        }\n\n# Get the parent resource id to create an api gateway resource using the api gateway id from above\nC:\\Users\\test\\localstack-test> PARENT_RESOURCE_ID=$(awslocal apigateway get-resources --rest-api-id 0zqyew47ie --query \'items[?path==`/`].id\' --output text)\n\n# Create an API resource Gateway\nC:\\Users\\test\\localstack-test> awslocal apigateway create-resource --rest-api-id 0zqyew47ie --parent-id $PARENT_RESOURCE_ID --path-part "{test}"\n\nResponse: \n    {\n        "id": "7z17qim7fw",\n        "parentId": "d22pls3twh",\n        "pathPart": "{test}",\n        "path": "/{test}"\n    }\n')),(0,s.kt)("h4",{id:"lambda-function"},"Lambda function"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},'# Create a lambda function named test-function\n  C:\\Users\\test\\localstack-test> awslocal lambda create-function --function-name test-function --runtime python3.7 --zip-file fileb://test.zip --handler test.lambda_handler --role test\n\n   Response: \n  {\n      "FunctionName": "test-function",\n      "FunctionArn": "arn:aws:lambda:us-east-1:000000000000:function:test-function",\n      "Runtime": "python3.7",\n      "Role": "test",\n      "Handler": "test.lambda_handler",\n      "CodeSize": 217,\n      "Description": "",\n      "Timeout": 3,\n      "LastModified": "2021-06-16T18:32:27.753+0000",\n      "CodeSha256": "TxccBpGFdCdDKjbXygowwHMdUE0yPX+1U2eu6Vd+rsk=",\n      "Version": "$LATEST",\n      "VpcConfig": {},\n      "TracingConfig": {\n          "Mode": "PassThrough"\n      },\n      "RevisionId": "fb286270-3b68-4cae-9237-8efac356bee3",\n      "State": "Active",\n      "LastUpdateStatus": "Successful",\n      "PackageType": "Zip"\n  }\n')),(0,s.kt)("h4",{id:"sqs"},"SQS"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},'  # Create an SQS queue named test-queue\n  C:\\Users\\test\\localstack-test> awslocal sqs create-queue --queue-name test-queue\n\n   Response: \n  {\n      "QueueUrl": "http://localhost:4566/000000000000/test-queue"\n  }\n\n  # Send a message to the SQS created above.\n  C:\\Users\\test\\localstack-test> awslocal sqs send-message --queue-url http://localhost:4566/000000000000/test-queue --message-body "test message." --delay-seconds 0\n\n   Response: \n  {\n    "MD5OfMessageBody": "5cbd04aaf0430ff7fac38ebd11b72083",\n    "MessageId": "0d4d8a75-276d-9687-6604-975cc0a84c68"\n}\n  # Receive the sent message from the SQS.\n  C:\\Users\\test\\localstack-test> awslocal sqs receive-message --queue-url http://localhost:4566/000000000000/test-queue --attribute-names All --message-attribute-names All\n\n   Response: \n  {\n      "Messages": [\n          {\n              "MessageId": "0d4d8a75-276d-9687-6604-975cc0a84c68",\n              "ReceiptHandle": "ljwfjwrrlolejmrqcqbsrrxajygjsbkleesnyxtvwlffoikfstreipeutydtzhxosvjicazswakagyfhcxbrbpxxofkzsdbgjlofnpbmfxxtztrsmjkhkecfbqvdxnyotoujibxdavaiewtthscexnvplkmfrryisowurnxrymfzvyozubidbhsms",\n              "MD5OfBody": "5cbd04aaf0430ff7fac38ebd11b72083",\n              "Body": "test message.",\n              "Attributes": {\n                  "SenderId": "AIDAIT2UOQQY3AUEKVGXU",\n                  "SentTimestamp": "1623871655817",\n                  "ApproximateReceiveCount": "1",\n                  "ApproximateFirstReceiveTimestamp": "1623871770221"\n              }\n          }\n      ]\n  }\n')),(0,s.kt)("h4",{id:"secrets-manager"},"Secrets manager"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},'    # Create a secret named localstack-secret in secrets manager\n    C:\\Users\\test\\localstack-test> awslocal secretsmanager create-secret --name localstack-secret\n\n      Response: \n    {\n        "ARN": "arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-secret-PAnuzB",\n        "Name": "localstack-secret",\n        "VersionId": "8c6c77a1-6400-441a-b8f7-730abec4b9d5"\n    }\n')),(0,s.kt)("h3",{id:"deploying-aws-resources-using-terraform-and-localstack"},"Deploying AWS resources using terraform and localstack"),(0,s.kt)("p",null,"Terraform can also be used to deploy and test AWS resources locally using localstack. Make sure to have Terraform installed on your local machine. An example of deploying services like lambda, API gateway, SQS, S3 and SNS is shown below:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},'    provider "aws" {\n      region = "us-east-1"\n      access_key = "123"\n      secret_key = "xyz"\n      skip_credentials_validation = true\n      skip_requesting_account_id = true\n      skip_metadata_api_check = true\n      s3_force_path_style = true\n      endpoints {\n        s3 = "http://localhost:4566"\n        sqs = "http://localhost:4566"\n        apigateway = "http://localhost:4566"\n        lambda = "http://localhost:4566"\n        sns = "http://localhost:4566"\n        secretsmanager = "http://localhost:4566"\n        iam = "http://localhost:4566"\n      }\n    }\n    #-------------------------------- resources-------------------\n    resource "aws_s3_bucket" "localstack-test-bucket" {\n      bucket = "localstack-test-bucket"\n    }\n    resource "aws_sqs_queue" "localstack-test-sqs" {\n      name                      = "localstack-test-sqs"\n      tags = {\n        Environment = "dev"\n      }\n    }\n\n    resource "aws_api_gateway_rest_api" "localstack-rest-api" {\n      name = "localstack-rest-api"\n    }\n\n    resource "aws_api_gateway_resource" "localstack-rest-api-resource" {\n      parent_id   = aws_api_gateway_rest_api.localstack-rest-api.root_resource_id\n      path_part   = "test"\n      rest_api_id = aws_api_gateway_rest_api.localstack-rest-api.id\n    }\n\n    resource "aws_lambda_function" "test_lambda" {\n      filename      = "test.zip"\n      function_name = "localstack-lambda"\n      role          = aws_iam_role.localstack-role.arn\n      handler       = "test.lambda_handler"\n      source_code_hash = filebase64sha256("test.zip")\n      runtime = "python3.7"\n    }\n\n    resource "aws_sns_topic" "localstack-sns-topic" {\n      name = "localstack-sns-topic"\n    }\n\n    resource "aws_secretsmanager_secret" "localstack-secret" {\n      name                    = "localstack-secret"\n      recovery_window_in_days = 0\n    }\n\n    data "aws_iam_policy_document" "localstack_policy" {\n      statement {\n        actions   = ["*"]\n        effect    = "Allow"\n      }\n    }\n\n    resource "aws_iam_role" "localstack-role" {\n      name               = "localstack-role"\n      assume_role_policy = data.aws_iam_policy_document.localstack_policy.json\n    }\n')),(0,s.kt)("p",null,"Here is the output after running ",(0,s.kt)("inlineCode",{parentName:"p"},"terraform apply")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-commandline"},"    Output:\n    Plan: 6 to add, 0 to change, 0 to destroy.\n    Do you want to perform these actions?\n      Terraform will perform the actions described above.\n      Only 'yes' will be accepted to approve.\n\n      Enter a value: yes\n\n    aws_api_gateway_rest_api.localstack-rest-api: Creating...\n    aws_secretsmanager_secret.localstack-secret: Creating...\n    aws_iam_role.localstack-role: Creating...\n    aws_sqs_queue.localstack-test-sqs: Creating...\n    aws_sns_topic.localstack-sns-topic: Creating...\n    aws_s3_bucket.localstack-test-bucket: Creating...\n    aws_sns_topic.localstack-sns-topic: Creation complete after 0s [id=arn:aws:sns:us-east-1:000000000000:localstack-sns-topic]\n    aws_api_gateway_rest_api.localstack-rest-api: Creation complete after 0s [id=kxg64u2jdv]\n    aws_api_gateway_resource.localstack-rest-api-resource: Creating...\n    aws_secretsmanager_secret.localstack-secret: Creation complete after 0s [id=arn:aws:secretsmanager:us-east-1:000000000000:secret:localstack-secret-iIRbKa]\n    aws_iam_role.localstack-role: Creation complete after 0s [id=localstack-role]\n    aws_sqs_queue.localstack-test-sqs: Creation complete after 0s [id=http://localhost:4566/000000000000/localstack-test-sqs]\n    aws_lambda_function.test_lambda: Creating...\n    aws_api_gateway_resource.localstack-rest-api-resource: Creation complete after 0s [id=b97isejc8z]\n    aws_s3_bucket.localstack-test-bucket: Creation complete after 0s [id=localstack-test-bucket]\n    aws_lambda_function.test_lambda: Creation complete after 6s [id=localstack-lambda]\n\n    Apply complete! Resources: 8 added, 0 changed, 0 destroyed.\n")),(0,s.kt)("h3",{id:"ide-for-localstack"},"IDE for Localstack"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Currently, there is an IDE named ",(0,s.kt)("a",{parentName:"li",href:"https://getcommandeer.com/"},"Commandeer")," that can be used to maintain localstack environments but requires a licensed premium version of the software to use. This could be something to look into in the future if we plan to buy a premium version.")),(0,s.kt)("h3",{id:"known-limitations"},"Known Limitations"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"While commonly used AWS services are present, some more uncommon services are not."),(0,s.kt)("li",{parentName:"ul"},"Is not a total replacement for AWS Sandbox testing.",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Security checks are not present."),(0,s.kt)("li",{parentName:"ul"},"Is, by its nature, a simulation.")))),(0,s.kt)("h3",{id:"future-direction"},"Future Direction"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Localstack in a Docker container would be an excellent place to deploy ORCA for local testing."),(0,s.kt)("li",{parentName:"ul"},"Could also be used for automated large testing in Bamboo if deployment scripting can be added.")),(0,s.kt)("h4",{id:"sources"},"Sources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Meeting with Aafaque"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/localstack/localstack"},"https://github.com/localstack/localstack")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://git.cr.usgs.gov/LPDA/appeears/-/blob/feature/rds-setup/deployment/terraform/dev/main.tf"},"AppEEARS' Docker Implementation")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/custom-service-endpoints"},"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/custom-service-endpoints"))))}d.isMDXComponent=!0}}]);