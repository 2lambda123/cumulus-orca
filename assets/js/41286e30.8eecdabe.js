"use strict";(self.webpackChunkorca_website=self.webpackChunkorca_website||[]).push([[1044],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),d=a,h=m["".concat(c,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(h,i(i({ref:t},u),{},{components:r})):n.createElement(h,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9760:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={id:"research-multipart-chunksize",title:"Multipart Chunksize Research Notes",description:"Research Notes on Modifying Multipart-Chunksize for copy_to_glacier."},c=void 0,s={unversionedId:"developer/research/research-multipart-chunksize",id:"developer/research/research-multipart-chunksize",title:"Multipart Chunksize Research Notes",description:"Research Notes on Modifying Multipart-Chunksize for copy_to_glacier.",source:"@site/docs/developer/research/research-multipart-chunksize.md",sourceDirName:"developer/research",slug:"/developer/research/research-multipart-chunksize",permalink:"/cumulus-orca/docs/developer/research/research-multipart-chunksize",draft:!1,editUrl:"https://github.com/nasa/cumulus-orca/edit/develop/website/docs/developer/research/research-multipart-chunksize.md",tags:[],version:"current",frontMatter:{id:"research-multipart-chunksize",title:"Multipart Chunksize Research Notes",description:"Research Notes on Modifying Multipart-Chunksize for copy_to_glacier."},sidebar:"dev_guide",previous:{title:"GraphQL Research Notes",permalink:"/cumulus-orca/docs/developer/research/research-graphql"},next:{title:"Bamboo specs Research Notes",permalink:"/cumulus-orca/docs/developer/research/research-bamboo"}},u={},p=[{value:"Overview",id:"overview",level:2},{value:"Implementation Details",id:"implementation-details",level:3},{value:"Future Direction",id:"future-direction",level:3}],m={toc:p};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/nasa/cumulus-orca/blob/2f2600a2edd85e0af216d78180c5d46ebda03060/tasks/copy_to_glacier/copy_to_glacier.py#L50"},"copy_to_glacier"),"\nuses a copy command that has a chunk-size for multi-part transfers.\nWe currently are using the default value of 8mb, which will cause problems when transferring large files, sometimes exceeding 120Gb."),(0,o.kt)("h3",{id:"implementation-details"},"Implementation Details"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/s3.html#S3.Client.copy"},"Docs for the copy command")," mention a ",(0,o.kt)("inlineCode",{parentName:"li"},"Config")," parameter of type ",(0,o.kt)("inlineCode",{parentName:"li"},"TransferConfig"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig"},"Docs for TransferConfig")," state that it has a property"),(0,o.kt)("li",{parentName:"ul"},"Given the above, we can modify the ",(0,o.kt)("inlineCode",{parentName:"li"},"s3.copy")," command to",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},"s3.copy(\n  copy_source,\n  destination_bucket, destination_key,\n  ExtraArgs={\n      'StorageClass': 'GLACIER',\n      'MetadataDirective': 'COPY',\n      'ContentType': s3.head_object(Bucket=source_bucket_name, Key=source_key)['ContentType'],\n      'ACL': 'bucket-owner-full-control'  # Sets the x-amz-acl URI Request Parameter. Needed for cross-OU copies.\n  },\n  Config=TransferConfig(multipart_chunksize=multipart_chunksize_mb * MB)\n)\n"))),(0,o.kt)("li",{parentName:"ul"},"This will require a variable passed into the lambda.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Could be set at the collection level under ",(0,o.kt)("inlineCode",{parentName:"li"},"config['collection']['s3MultipartChunksizeMb']")," with a default value in the lambdas/main.tf entry for ",(0,o.kt)("inlineCode",{parentName:"li"},"copy_to_glacier")," defined as",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"environment {\n  variables = {\n    ORCA_DEFAULT_BUCKET = var.orca_default_bucket,\n    DEFAULT_ORCA_COPY_CHUNK_SIZE_MB = var.orca_copy_chunk_size\n  }\n}\n"))),(0,o.kt)("li",{parentName:"ul"},"Could also be an overall environment variable, though this is less flexible. In the lambdas/main.tf entry for ",(0,o.kt)("inlineCode",{parentName:"li"},"copy_to_glacier")," this would look like",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"environment {\n  variables = {\n    ORCA_DEFAULT_BUCKET = var.orca_default_bucket,\n    ORCA_COPY_CHUNK_SIZE_MB = var.orca_copy_chunk_size\n  }\n}\n"))))),(0,o.kt)("li",{parentName:"ul"},"The above should be added to other TF files such as terraform.tfvars, orca/main.tf, orca/variables.tf, and lambdas/variables.tf as well as documentation.")),(0,o.kt)("h3",{id:"future-direction"},"Future Direction"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Recommend adding the environment variable ",(0,o.kt)("inlineCode",{parentName:"li"},"ORCA_COPY_CHUNK_SIZE_MB")," to TF and Lambda.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Worth waiting to use the same name as Cumulus, as they are going through a similar change."))),(0,o.kt)("li",{parentName:"ul"},"I have read in a couple of sources that increasing ",(0,o.kt)("inlineCode",{parentName:"li"},"io_chunksize")," can also have a significant impact on performance. May be worth looking into if more improvements are desired.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"The other variables should be considered as well.")))))}d.isMDXComponent=!0}}]);